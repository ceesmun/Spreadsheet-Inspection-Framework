<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="policyList" type="policyList"/>

  <xs:complexType name="policyList">
    <xs:sequence>
      <xs:element name="dynamicPolicy" type="dynamicPolicy" minOccurs="0"/>
      <xs:element name="sanityRules" type="sanityRules" minOccurs="0"/>
      <xs:element name="readingDirectionPolicyRule" type="readingDirectionPolicyRule" minOccurs="0"/>
      <xs:element name="noConstantsPolicyRule" type="noConstantsPolicyRule" minOccurs="0"/>
      <xs:element name="formulaComplexityPolicyRule" type="formulaComplexityPolicyRule" minOccurs="0"/>
      <xs:element name="nonConsideredValuesPolicyRule" type="nonConsideredValuesPolicyRule" minOccurs="0"/>
      <xs:element name="oneAmongOthersPolicyRule" type="oneAmongOthersPolicyRule" minOccurs="0"/>
      <xs:element name="refToNullPolicyRule" type="refToNullPolicyRule" minOccurs="0"/>
      <xs:element name="stringDistancePolicyRule" type="stringDistancePolicyRule" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="dynamicPolicy">
    <xs:complexContent>
      <xs:extension base="policy">
        <xs:sequence>
          <xs:element name="spreadsheetFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="inputCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="inputCell" type="ioCellInfo" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="outputCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="outputCell" type="ioCellInfo" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="policy">
    <xs:sequence>
      <xs:element name="rules" type="dynamicPolicyRuleListWrapper" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="author" type="xs:string"/>
    <xs:attribute name="description" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ioCellInfo">
    <xs:sequence>
      <xs:element name="a1Address" type="xs:string" minOccurs="0"/>
      <xs:element name="name" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="dynamicPolicyRuleListWrapper">
    <xs:sequence>
      <xs:element name="rule" type="rule" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="rule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="invariants" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="compare" type="binaryCondition"/>
                  <xs:element name="interval" type="ternaryCondition"/>
                  <xs:element name="count" type="elementCountCondition"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="testInputs" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="testInput" type="testInput" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="postconditions" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="compare" type="binaryCondition"/>
                  <xs:element name="interval" type="ternaryCondition"/>
                  <xs:element name="count" type="elementCountCondition"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="monolithicPolicyRule" abstract="true">
    <xs:complexContent>
      <xs:extension base="abstractPolicyRule">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="abstractPolicyRule" abstract="true">
    <xs:sequence/>
    <xs:attribute name="severityWeight" type="xs:double"/>
    <xs:attribute name="type" type="policyRuleType"/>
    <xs:attribute name="possibleSolution" type="xs:string"/>
    <xs:attribute name="author" type="xs:string"/>
    <xs:attribute name="background" type="xs:string"/>
    <xs:attribute name="description" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="binaryCondition">
    <xs:complexContent>
      <xs:extension base="abstractCondition">
        <xs:sequence>
          <xs:element name="relation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="abstractCondition" abstract="true">
    <xs:sequence>
      <xs:element name="elementType" type="xs:string" minOccurs="0"/>
      <xs:element name="property" type="xs:string" minOccurs="0"/>
      <xs:element name="target" type="xs:string" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ternaryCondition">
    <xs:complexContent>
      <xs:extension base="abstractCondition">
        <xs:sequence>
          <xs:element name="relation" type="xs:string" minOccurs="0"/>
          <xs:element name="value2" type="xs:double" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="elementCountCondition">
    <xs:complexContent>
      <xs:extension base="abstractCondition">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="testInput">
    <xs:sequence>
      <xs:element name="target" type="xs:string" minOccurs="0"/>
      <xs:element name="type" type="cellContentType" minOccurs="0"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="formulaComplexityPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="formulaComplexityMaxNesting" type="xs:int" minOccurs="0"/>
          <xs:element name="formulaComplexityMaxOperations" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="noConstantsPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="ignoredConstants" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="ignoredConstant" type="xs:anyType" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="ignoredFunctions" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="functionName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sanityRules">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="sanityCheckingCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sanityValueCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sanityConstraintCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sanityExplanationCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="sanityWarnings" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="readingDirectionPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="leftToRight" type="xs:boolean" minOccurs="0"/>
          <xs:element name="topToBottom" type="xs:boolean" minOccurs="0"/>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="stringDistancePolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="stringDistanceDifference" type="xs:int"/>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="multipleSameRefPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="nonConsideredValuesPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="oneAmongOthersPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="refToNullPolicyRule">
    <xs:complexContent>
      <xs:extension base="monolithicPolicyRule">
        <xs:sequence>
          <xs:element name="ignoredCells" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="cellContentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BLANK"/>
      <xs:enumeration value="BOOLEAN"/>
      <xs:enumeration value="TEXT"/>
      <xs:enumeration value="NUMERIC"/>
      <xs:enumeration value="ERROR"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="policyRuleType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="STATIC"/>
      <xs:enumeration value="DYNAMIC"/>
      <xs:enumeration value="SANITY"/>
      <xs:enumeration value="COMPOSITE"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

